<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2022-02-10T03:00:00Z</updated>
  <entry>
    <title>Spring Tips: IO, IO, It's Off To Work We Go</title>
    <link rel="alternate" href="https://spring.io/blog/2022/02/09/spring-tips-io-io-it-s-off-to-work-we-go" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-02-10:4695</id>
    <updated>2022-02-10T03:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;Spring Tips&lt;/em&gt;! In this installment, Josh Long (@starbuxman) looks at the wide and wonderful world of IO on the JVM. &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/eKfNoT07k_s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - February 8th, 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/02/08/this-week-in-spring-february-8th-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-02-08:4693</id>
    <updated>2022-02-08T12:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans, and welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! How are you? I&amp;rsquo;m doin&amp;rsquo; well. Got a lot of exciting stuff to share with you in the near future so check this space! We&amp;rsquo;ve got a ton to get to this week so let&amp;rsquo;s dive right in! &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/02/03/a-bootiful-podcast-former-spring-data-lead-and-architect-extraordinaire-oliver-drotbohm"&gt;A Bootiful Podcast: Former Spring Data lead and architect extraordinaire, Oliver Drotbohm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/xmolecules/jmolecules-examples/commit/4e6094257e669e6d99514cbb645c0cabe3ccde08"&gt;Introduce example value object implemented as record. ¡¤ xmolecules/jmolecules-examples@4e60942&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/02/04/spring-shell-2-1-0-m2-is-now-available"&gt;Spring Shell 2.1.0-M2 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/02/02/spring-tools-4-13-1-released"&gt;Spring Tools 4.13.1 released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the initial &lt;a href="https://github.com/spring-projects/spring-boot/issues/29666"&gt;Micrometer 2.0.0 and Micrometer Tracing 1.0.0 observability is on its way to Spring Boot!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://twitter.com/JavaAtMicrosoft/status/1489040682391982080"&gt;Additions and Updates to Microsoft Build of #OpenJDK https://t.co/LRWnPdBTIY #OpenJDK https://devblogs.microsoft.com/java/additions-and-updates-to-microsoft-build-of-openjdk/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2022/02/07/sig-multicluster-spotlight-2022/"&gt;Blog: Spotlight on SIG Multicluster&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/openjdk/jdk/releases/tag/jdk-18%2B33"&gt;Build 33 of Java 18 is available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://bell-sw.com/announcements/2022/01/28/liberica-native-image-kit-22-0-0-2-and-21-3-1-builds-are-released/"&gt;Liberica Native Image Kit 22.0.0.2 and 21.3.1 builds are released&lt;/a&gt; (check out the bit about Spring Native)&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Shell 2.1.0-M2 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2022/02/04/spring-shell-2-1-0-m2-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Janne Valkealahti</name>
    </author>
    <id>tag:spring.io,2022-02-04:4692</id>
    <updated>2022-02-04T13:40:25Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Shell &lt;code&gt;2.1.0-M2&lt;/code&gt; has been released and is now available from &lt;a href="https://repo.spring.io/milestone"&gt;https://repo.spring.io/milestone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We previously had a &lt;em&gt;milestone M1&lt;/em&gt;, named &lt;code&gt;3.0.0-M1&lt;/code&gt; which we soon after its release realised that it was a mistake to pump major version for this &lt;em&gt;rework&lt;/em&gt; to make codebase better for &lt;em&gt;Spring Boot 2.x&lt;/em&gt;. We want to avoid confusing versioning when &lt;em&gt;spring-shell&lt;/em&gt; upgrades and baselines with &lt;em&gt;Spring Boot 3.x&lt;/em&gt;. Thus having said that, &lt;em&gt;Spring Shell 2.1.x&lt;/em&gt; is going to be for &lt;em&gt;Spring Boot 2.6.x&lt;/em&gt; and future &lt;em&gt;Spring Shell 3.x&lt;/em&gt; for &lt;em&gt;Spring Boot 3.x&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Notable changes include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;New build-in version command&lt;/li&gt;
  &lt;li&gt;Starter for jna integration&lt;/li&gt;
  &lt;li&gt;Customizer for non-interactive runner&lt;/li&gt;
  &lt;li&gt;New styling and theming subsystem&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/spring-projects/spring-shell/releases/tag/v2.1.0-M2"&gt;release notes&lt;/a&gt; for more details.&lt;/p&gt;
&lt;p&gt;Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-shell/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-shell"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-shell/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-shell/docs/2.1.0-M2/site/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Former Spring Data lead and architect extraordinaire, Oliver Drotbohm</title>
    <link rel="alternate" href="https://spring.io/blog/2022/02/03/a-bootiful-podcast-former-spring-data-lead-and-architect-extraordinaire-oliver-drotbohm" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-02-04:4691</id>
    <updated>2022-02-04T01:00:00Z</updated>
    <content type="html">&lt;br/&gt;
&lt;iframe title="Former Spring Data lead and architect extraordinaire, Oliver Drotbohm" allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=m5a2f-1199a3e-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;p&gt;Hi, Spring fans! In this installment, &lt;a href="https://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to former Spring Data lead and architect extraordinaire, &lt;a href="https://twitter.com/odrotbohm"&gt;Oliver Drotbohm (@odrotbohm)&lt;/a&gt; about building elegant architectures.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://github.com/xmolecules/jmolecules"&gt;jMolecules&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/moduliths/moduliths"&gt;Moduliths&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://odrotbohm.de/2021/02/Architecturally-evident-code-with-jMolecules/"&gt;Architecturally Evident Code with jMolecules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Tools 4.13.1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2022/02/02/spring-tools-4-13-1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2022-02-02:4690</id>
    <updated>2022-02-02T12:00:00Z</updated>
    <content type="html">&lt;p&gt;Dear Spring Community,&lt;/p&gt;
&lt;p&gt;I am happy to announce the 4.13.1 release of the Spring Tools 4 for Eclipse, Visual Studio Code, and Theia.&lt;/p&gt;&lt;h4&gt;&lt;a href="#fixes-and-improvements" class="anchor" name="fixes-and-improvements"&gt;&lt;/a&gt;fixes and improvements&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; improvement: Consider if content assist can be offered for spring.config.import property keys (&lt;a href="https://github.com/spring-projects/sts4/issues/536"&gt;#536&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Spring Boot)&lt;/em&gt; fixed: YAML editor generates wrong EOL characters in Windows (&lt;a href="https://github.com/spring-projects/sts4/issues/709"&gt;#709&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(VSCode)&lt;/em&gt; fixed: Always pop up a prompt box: indexing spring boot properties (&lt;a href="https://github.com/spring-projects/sts4/issues/697"&gt;#697&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(VSCode)&lt;/em&gt; fixed: Spring Boot Tools for VS Code incorrectly misidentifies internal JDK for Language Support for Java as a JRE (&lt;a href="https://github.com/spring-projects/sts4/issues/715"&gt;#715&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;(Eclipse)&lt;/em&gt; fixed: Create or modify new project - maven update problem (&lt;a href="https://github.com/spring-projects/sts4/issues/703"&gt;#703&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To download the distribution for Eclipse and find links to the marketplace entries for Visual Studio Code and Theia, please go visit:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Tools 4: &lt;a href="https://spring.io/tools/"&gt;https://spring.io/tools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are updating an existing Spring Tools 4.12.1 (or prior) installation, please make sure you to prepare your installation properly: &lt;a href="https://twitter.com/springtools4/status/1468587842838355980"&gt;https://twitter.com/springtools4/status/1468587842838355980&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Detailed changes can be found here: &lt;a href="https://github.com/spring-projects/sts4/wiki/Changelog#2022-02-02-4131-release-incl-language-servers-version-1300"&gt;https://github.com/spring-projects/sts4/wiki/Changelog#2022-02-02-4131-release-incl-language-servers-version-1300&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Tools 4.14.0 is scheduled to be released in late March 2022.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - February 1st, 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/02/01/this-week-in-spring-february-1st-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-02-01:4689</id>
    <updated>2022-02-01T11:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! It&amp;rsquo;s a new Lunar year, so that&amp;rsquo;s exciting, and I just celebrated my birthday, and that of my late father, as well. That was exciting. But there was also some bittersweet news. Let&amp;rsquo;s get that out of the way first&amp;hellip;&lt;/p&gt;
&lt;p&gt;My friend, my hero, St?phane Maldini, former project lead of Project Reactor and cofounder of the Reactive Streams initiative, passed away two months ago. We in the Java community made him a Java Champion posthumously. We miss him dearly. I think of him when I write reactive code. &lt;/p&gt;
&lt;p&gt;Mon ami, mon h?ros, St?phane Maldini, ancien lead de l&amp;rsquo;equipe Reactor et cofondateur des Reactive Streams, est mort il y a deux mois. La commaunit? Java l&amp;rsquo;a nomm? un Java Champion. Il nous manque beaucoup. Je pense a lui lorsque j&amp;rsquo;ecris du code reactive. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/java_champions/status/1488256368851095554?s=12"&gt;Java Champions on Twitter&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;RIP, &lt;a href="https://twitter.com/smaldini"&gt;St?phane&lt;/a&gt;.&lt;/p&gt;
&lt;img src="https://pbs.twimg.com/profile_images/466947303840837632/GjHqCnrL_400x400.jpeg"/&gt;
&lt;p&gt;Sigh. &lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s been two months and it still sucks so much that he&amp;rsquo;s gone. Thanks for indulging this lament, and now, on to this week&amp;rsquo;s roundup. &lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/27/a-bootiful-podcast-spring-framework-cofounder-and-project-lead-friend-and-all-around-amazing-human-being-juergen-hoeller"&gt;A Bootiful Podcast: Spring Framework cofounder and project lead, friend, and all-around amazing human being, Juergen Hoeller&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=U-4RQ7LXZUk"&gt;Josh Long - Kubernetes Native Java - YouTube&lt;/a&gt;. I recently did a talk for the JChampions (comprised of speakers who are all uniquely Java Champions) Conference. It was a lot of fun and you might enjoy it. I also loved catching up with fellow Java Champion Mary Grygleski, who informs and delights every time.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BE77h7dmoQU"&gt;Kubernetes: The Documentary [PART 1] - YouTube&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;It was a ton of fun to wok AtomicJar&amp;rsquo;s Oleg Selajev and Sergei Egorov developing this talk, introducing &lt;a href="https://t.co/MlsZsYIZGz"&gt;&amp;quot;super fast local development with Spring Boot&amp;rsquo;s devtools and Testcontainers-powered databases From a change in the source code to a new instance running in less than a few hundred milliseconds!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/26/spring-authorization-server-0-2-2-available-now"&gt;Spring Authorization Server 0.2.2 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/27/spring-cloud-2022-0-0-m1-codename-kilburn-has-been-released"&gt;Spring Cloud 2022.0.0-M1 (codename Kilburn) Has Been Released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/26/spring-native-0-11-2-available-now"&gt;Spring Native 0.11.2 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Nice! The MyBatis project has released a new not-yet GA Spring Native integration based in part on the work I did to prove it out. This in turn spurred interest from the team and the collaboration kept going strong even after I disengaged. The work is amazing, and you should try it out to build your own MyBatis + Spring Boot + GraalVM images: &lt;a href="https://github.com/mybatis/spring-native"&gt;mybatis/spring-native&lt;/a&gt;. Check out the &lt;a href="https://github.com/mybatis/spring-native/wiki/Quick-Start"&gt;Quick Start, too&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;I had a lot of fun speaking to &lt;a href="https://twitter.com/turkeyjavacom/status/1483727602426777601"&gt;the Turkey Java Community&lt;/a&gt;! Thanks for having me.&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud 2022.0.0-M1 (codename Kilburn) Has Been Released</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/27/spring-cloud-2022-0-0-m1-codename-kilburn-has-been-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Glenn Renfro</name>
    </author>
    <id>tag:spring.io,2022-01-27:4686</id>
    <updated>2022-01-28T05:45:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the community, I am pleased to announce that the Milestone 1 (M1) of the &lt;a href="https://cloud.spring.io"&gt;Spring Cloud 2022.0&lt;/a&gt; Release Train is available today. The release can be found in &lt;a href="https://repo.spring.io/milestone/"&gt;Spring Milestone&lt;/a&gt; repository. You can check out the 2022.0 &lt;a href="https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0-Release-Notes#202200-m1"&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;&lt;h2&gt;&lt;a href="#notable-changes-in-the-2022-0-0-release-train" class="anchor" name="notable-changes-in-the-2022-0-0-release-train"&gt;&lt;/a&gt;Notable Changes in the 2022.0.0 Release Train&lt;/h2&gt;
&lt;p&gt;See &lt;a href="https://github.com/orgs/spring-cloud/projects/71"&gt;the project page&lt;/a&gt; for all the issues and pull requests included in this release.&lt;/p&gt;
&lt;p&gt;The 2022.0.0-M1 release is all about compatibility with Spring Framework 6.0.0-M2, Spring Boot 3.0.0-M1, Java 17, Jakarta EE, and all the other milestones of Spring projects such as Spring Security, Spring Data, etc&amp;hellip;&lt;/p&gt;
&lt;p&gt;Changes include: moving to a Java 17 baseline, migrating from &lt;code&gt;javax.*&lt;/code&gt; packages to &lt;code&gt;jakarta.*&lt;/code&gt;, changes for removed classes and methods marked for deprecation, updating dependencies to versions compatible with JakartaEE and/or Java 17, Spring Cloud Cloudfoundry and CLI have been removed from the release train, and many more.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2022.0-Release-Notes#breaking-changes"&gt;wiki&lt;/a&gt; for a running list of breaking changes.&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-cloud-commons" class="anchor" name="spring-cloud-commons"&gt;&lt;/a&gt;Spring Cloud Commons&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;The OAuth integration has been migrated from the deprecated Spring Security OAuth to OAuth2 support in Spring Security (&lt;a href="https://github.com/spring-cloud/spring-cloud-commons/issues/1053"&gt;1053&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;&lt;a href="#spring-cloud-kubernetes" class="anchor" name="spring-cloud-kubernetes"&gt;&lt;/a&gt;Spring Cloud Kubernetes&lt;/h3&gt;
&lt;p&gt;Removed the use of &lt;code&gt;@ConditionalOnKubernetesEnabled&lt;/code&gt; in favor of &lt;code&gt;@ConditionalOnCloudPlatform&lt;/code&gt; from Spring Boot (&lt;a href="https://github.com/spring-cloud/spring-cloud-kubernetes/issues/893"&gt;893&lt;/a&gt;)&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-cloud-task" class="anchor" name="spring-cloud-task"&gt;&lt;/a&gt;Spring Cloud Task&lt;/h3&gt;
&lt;p&gt;Spring Cloud Task 3.0.0-M1 is intended to be the version of the framework aligned with Spring Boot 3.0.0-M1. &lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-cloud-contract" class="anchor" name="spring-cloud-contract"&gt;&lt;/a&gt;Spring Cloud Contract&lt;/h3&gt;
&lt;p&gt;Is not a part of the 2022.0.0-M1 release of Spring Cloud. It will be a part of the M2 release.&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-cloud-netflix" class="anchor" name="spring-cloud-netflix"&gt;&lt;/a&gt;Spring Cloud Netflix&lt;/h3&gt;
&lt;p&gt;Is not a part of the 2022.0.0-M1 release of Spring Cloud. It will be a part of a future release once Eureka is compatible with JakartaEE.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Module &lt;/th&gt;
      &lt;th&gt;Version &lt;/th&gt;
      &lt;th&gt;Issues&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Vault &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Config &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Zookeeper &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Commons &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-commons/milestone/98?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Kubernetes &lt;/td&gt;
      &lt;td&gt;3.0.0-M1 &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-kubernetes/milestone/41?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Task &lt;/td&gt;
      &lt;td&gt;3.0.0-M1 &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-task/milestone/51?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Starter Build &lt;/td&gt;
      &lt;td&gt;2022.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Circuitbreaker &lt;/td&gt;
      &lt;td&gt;3.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Bus &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Consul &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;(&lt;a href="https://github.com/spring-cloud/spring-cloud-consul/milestone/60?closed=1"&gt;issues&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Gateway &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Spring Cloud Openfeign &lt;/td&gt;
      &lt;td&gt;4.0.0-M1 &lt;/td&gt;
      &lt;td&gt;&amp;nbsp;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As always, we welcome feedback on &lt;a href="https://github.com/spring-cloud/"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;Gitter&lt;/a&gt;, on &lt;a href="https://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloud"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint xml"&gt;&amp;lt;repositories&amp;gt;&#xD;
    &amp;lt;repository&amp;gt;&#xD;
        &amp;lt;id&amp;gt;spring-milestones&amp;lt;/id&amp;gt;&#xD;
        &amp;lt;name&amp;gt;Spring Milestones&amp;lt;/name&amp;gt;&#xD;
        &amp;lt;url&amp;gt;https://repo.spring.io/milestone&amp;lt;/url&amp;gt;&#xD;
        &amp;lt;snapshots&amp;gt;&#xD;
            &amp;lt;enabled&amp;gt;false&amp;lt;/enabled&amp;gt;&#xD;
        &amp;lt;/snapshots&amp;gt;&#xD;
    &amp;lt;/repository&amp;gt;&#xD;
&amp;lt;/repositories&amp;gt;&#xD;
&amp;lt;dependencyManagement&amp;gt;&#xD;
    &amp;lt;dependencies&amp;gt;&#xD;
        &amp;lt;dependency&amp;gt;&#xD;
            &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
            &amp;lt;artifactId&amp;gt;spring-cloud-dependencies&amp;lt;/artifactId&amp;gt;&#xD;
            &amp;lt;version&amp;gt;2022.0.0-M1&amp;lt;/version&amp;gt;&#xD;
            &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&#xD;
            &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&#xD;
        &amp;lt;/dependency&amp;gt;&#xD;
    &amp;lt;/dependencies&amp;gt;&#xD;
&amp;lt;/dependencyManagement&amp;gt;&#xD;
&amp;lt;dependencies&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
        &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
        &amp;lt;artifactId&amp;gt;spring-cloud-starter-config&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
    &amp;lt;dependency&amp;gt;&#xD;
        &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt;&#xD;
        &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-eureka-client&amp;lt;/artifactId&amp;gt;&#xD;
    &amp;lt;/dependency&amp;gt;&#xD;
    ...&#xD;
&amp;lt;/dependencies&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint groovy"&gt;plugins {&#xD;
  id &amp;#39;org.springframework.boot&amp;#39; version &amp;#39;2.6.1&amp;#39;&#xD;
  id &amp;#39;io.spring.dependency-management&amp;#39; version &amp;#39;1.0.11.RELEASE&amp;#39;&#xD;
  id &amp;#39;java&amp;#39;&#xD;
}&#xD;
group = &amp;#39;com.example&amp;#39;&#xD;
version = &amp;#39;0.0.1-SNAPSHOT&amp;#39;&#xD;
sourceCompatibility = &amp;#39;17&amp;#39;&#xD;
&#xD;
repositories {&#xD;
  maven { url &amp;#39;https://repo.spring.io/milestone&amp;#39;}&#xD;
}&#xD;
&#xD;
ext {&#xD;
  set(&amp;#39;springCloudVersion&amp;#39;, &amp;quot;2022.0.0-M1&amp;quot;)&#xD;
}&#xD;
&#xD;
dependencies {&#xD;
  implementation &amp;#39;org.springframework.cloud:spring-cloud-starter-config&amp;#39;&#xD;
  implementation &amp;#39;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&amp;#39;&#xD;
}&#xD;
&#xD;
dependencyManagement {&#xD;
  imports {&#xD;
    mavenBom &amp;quot;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}&amp;quot;&#xD;
  }&#xD;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: Spring Framework cofounder and project lead, friend, and all around amazing human being, Juergen Hoeller</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/27/a-bootiful-podcast-spring-framework-cofounder-and-project-lead-friend-and-all-around-amazing-human-being-juergen-hoeller" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-01-28:4687</id>
    <updated>2022-01-28T01:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! Welcome to another installment of &lt;em&gt;A Bootiful Podcast&lt;/em&gt;! In this installment, &lt;a href="https://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to Spring Framework co-founder and project lead, friend, and all-around amazing human being, &lt;a href="https://twitter.com/springjuergen"&gt;Juergen Hoeller (@springjuergen)&lt;/a&gt; about Spring Framework 6 and Spring Boot 3.&lt;/p&gt;
&lt;iframe title="Spring Framework cofounder and project lead, friend, and all around amazing human being, Juergen Hoeller" allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=5exm4-118effb-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Authorization Server 0.2.2 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/26/spring-authorization-server-0-2-2-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Joe Grandja</name>
    </author>
    <id>tag:spring.io,2022-01-26:4685</id>
    <updated>2022-01-26T16:00:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the team and everyone who has contributed, it is my pleasure to announce the general availability of Spring Authorization Server 0.2.2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You can download it from Maven Central by using the module coordinates:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="groovy"&gt;compile 'org.springframework.security:spring-security-oauth2-authorization-server:0.2.2'&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;See the &lt;a href="https://github.com/spring-projects/spring-authorization-server/releases/tag/0.2.2"&gt;release notes&lt;/a&gt; for complete details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;To get started using Spring Authorization Server, see the &lt;a href="https://github.com/spring-projects/spring-authorization-server/tree/main/samples"&gt;sample&lt;/a&gt; to become familiar with setup and configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;We would love to gather your feedback as we strive to improve and build upon this release.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects/spring-authorization-server"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-authorization-server/issues"&gt;GitHub Issues&lt;/a&gt; |  &lt;a href="https://app.zenhub.com/workspaces/authorization-server-5e8f3182b5e8f5841bfc4902/board?repos=248032165"&gt;ZenHub Board&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Native 0.11.2 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/26/spring-native-0-11-2-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>S?bastien Deleuze</name>
    </author>
    <id>tag:spring.io,2022-01-26:4684</id>
    <updated>2022-01-26T08:00:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Native &lt;code&gt;0.11.2&lt;/code&gt; has been released and is now available from &lt;a href="https://repo.spring.io/release"&gt;https://repo.spring.io/release&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects-experimental/spring-native/releases/tag/0.11.2"&gt;30 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-projects-experimental/spring-native"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects-experimental/spring-native/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-native/docs/0.11.2/reference/htmlsingle/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - January 25th, 2022</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/25/this-week-in-spring-january-25th-2022" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-01-25:4683</id>
    <updated>2022-01-25T23:00:00Z</updated>
    <content type="html">&lt;br/&gt;
&lt;img width = "400" src = "https://raw.githubusercontent.com/joshlong/blog-images/master/cny/tiger-resized.gif" /&gt;
&lt;p&gt;Hi, Spring fans! Can you believe it&amp;rsquo;s already the 25th of the first month of a brand new year!? And we&amp;rsquo;re fast approaching the Lunar New Year, often also called the Chinese New Year, which will arrive next Tuesday. Reunion dinner will be on the 31st of January, and the two weeks of celebration will begin. All that to say that this is my last real chance, speaking I&amp;rsquo;m sure for the entire Tanzu team, to wish everyone around the planet (billions of people!) who celebrates a very happy Lunar New Year (Mandarin: &lt;strong&gt;ãæÒ´öá?&lt;/strong&gt; (pronounced: &lt;em&gt;xin nian kauai le&lt;/em&gt; ) / Cantonese: &lt;strong&gt;ãæÒ´öá?&lt;/strong&gt; (pronounced: &lt;em&gt;san nin fai lok&lt;/em&gt; )) and to say that we hope you enjoy prosperity in the new year (Mandarin: &lt;strong&gt;Íñýì??&lt;/strong&gt; (pronounced: &lt;em&gt;gong xi fa cai&lt;/em&gt;) / Cantonese: &lt;strong&gt;Íñýì??&lt;/strong&gt; (pronounced: &lt;em&gt;gong hei fat choy&lt;/em&gt;))! &lt;/p&gt;
&lt;p&gt;That said, let&amp;rsquo;s get into this week&amp;rsquo;s epic roundup! There&amp;rsquo;s a ton of stuff.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;I was thrilled to participate in a discussion with AtomicJar&amp;rsquo;s Oleg Selajev &lt;a href="https://www.youtube.com/watch?v=1PUshxvTbAc"&gt;about Spring Boot and Testcontainers this morning&lt;/a&gt;. Don&amp;rsquo;t miss this! It was so much fun and we introduced a ton of cool goodies.&lt;/li&gt;
  &lt;li&gt;I had a lot of fun speaking at the &lt;a href="https://www.youtube.com/watch?v=U-4RQ7LXZUk&amp;t=1s"&gt;JChampionsConference this morning&lt;/a&gt; about building &lt;strong&gt;Kubernetes Native Java&lt;/strong&gt;. It was a lot of fun! I spoke for nearly 60 minutes and then fielded questions from folks for half an hour after the show! And of course, the legendary &lt;a href="https://twitter.com/mgrygles"&gt;Mary Grygleski&lt;/a&gt; was a fantastic host and I loved catching up with her, too.&lt;/li&gt;
  &lt;li&gt;I&amp;rsquo;ll be speaking at 11:00 AM GMT+3 on the 26th of January, 2022, to the Turkey Java Community. &lt;a href="https://twitter.com/turkeyjavacom/status/1483727602426777601"&gt;Join us!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/20/a-bootiful-podcast-redhat-s-kate-stanley-on-the-distinction-between-traditional-brokers-and-apache-kafka"&gt;A Bootiful Podcast: RedHat&amp;rsquo;s Kate Stanley on the distinction between traditional brokers and Apache Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://medium.com/graalvm/graalvm-22-0-is-here-c7acc82a8c2e"&gt;GraalVM 22.0 is here&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://kubernetes.io/blog/2022/01/19/secure-your-admission-controllers-and-webhooks/"&gt;Blog: Securing Admission Controllers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/19/elastic-and-microsoft-azure-unified-observability-for-spring-boot-applications"&gt;Elastic and Microsoft Azure - Unified Observability for Spring Boot applications&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/19/spring-batch-5-0-m1-released"&gt;Spring Batch 5.0 M1 released&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/20/spring-boot-2-5-9-available-now"&gt;Spring Boot 2.5.9 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/20/spring-boot-2-6-3-is-now-available"&gt;Spring Boot 2.6.3 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/20/spring-boot-2-7-0-m1-is-now-available"&gt;Spring Boot 2.7.0-M1 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/20/spring-boot-3-0-0-m1-is-now-available"&gt;Spring Boot 3.0.0-M1 is now available&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/20/spring-data-jdbc-how-can-i-do-a-partial-update-of-an-aggregate-root"&gt;Spring Data JDBC - How Can I Do a Partial Update of an Aggregate Root?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/24/spring-initializr-0-12-0-available-now"&gt;Spring Initializr 0.12.0 available now&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2022/01/19/spring-for-graphql-1-0-0-m5-released"&gt;Spring for GraphQL 1.0.0-M5 Released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Initializr 0.12.0 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/24/spring-initializr-0-12-0-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2022-01-24:4682</id>
    <updated>2022-01-24T14:47:29Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I¡¯m happy to announce that Spring Initializr 0.12.0 has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-io/initializr/releases/tag/v0.12.0"&gt;10 fixes, improvements and dependency upgrades&lt;/a&gt;.&lt;br/&gt;Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;
&lt;p&gt;For full &lt;a href="https://github.com/spring-io/initializr/wiki/Spring-Initializr-0.12-Release-Notes#upgrading-from-initializr-011"&gt;upgrade instructions&lt;/a&gt; and &lt;a href="https://github.com/spring-io/initializr/wiki/Spring-Initializr-0.12-Release-Notes#new-and-noteworthy"&gt;new and noteworthy&lt;/a&gt; features please see the &lt;a href="https://github.com/spring-io/initializr/wiki/Spring-Initializr-0.12-Release-Notes"&gt;release notes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-io/initializr"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/initializr/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/initializr/docs/0.12.0/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-initializr"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-io/initializr"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 3.0.0-M1 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/20/spring-boot-3-0-0-m1-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Phil Webb</name>
    </author>
    <id>tag:spring.io,2022-01-20:4681</id>
    <updated>2022-01-20T23:00:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;3.0.0-M1&lt;/code&gt; has been released and is now available from &lt;a href="https://repo.spring.io/milestone"&gt;https://repo.spring.io/milestone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This milestone starts our exciting journey to the next generation of the Spring Framework and raises our baseline from Java 8 to Java 17. We are planning to release a new milestone of Spring Boot 3.0 every two months. M2 should arrive on March 24 and we are planning on a GA release in late November.&lt;/p&gt;
&lt;p&gt;If you are trying an existing application with Spring Boot 3.0 you&amp;rsquo;ll need to be aware that we&amp;rsquo;ve migrated all Java EE APIs to their equivalent Jakarta EE variant. For most users, this means you&amp;rsquo;ll need to replace any &lt;code&gt;javax&lt;/code&gt; imports with &lt;code&gt;jakarta&lt;/code&gt;. For example, &lt;code&gt;javax.servlet.Filter&lt;/code&gt; would be replaced with &lt;code&gt;jakarta.servlet.Filter&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re still waiting for a few third-party libraries to release Jakarta EE compatible versions, so not all Spring Boot 2.x features are available with this first milestone. We plan to reintroduce features as and when libraries provide appropriate releases.&lt;/p&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0.0-M1-Release-Notes"&gt;release notes&lt;/a&gt; for more details and upgrade instructions.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re interested in trying this new release, you can easily generate a project from &lt;a href="https://start.spring.io"&gt;start.spring.io&lt;/a&gt;.&lt;br/&gt;Thanks to all those who have contributed with issue reports and pull requests. &lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/3.0.0-M1/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>A Bootiful Podcast: RedHat's Kate Stanley on the distinction between traditional brokers and Apache Kafka</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/20/a-bootiful-podcast-redhat-s-kate-stanley-on-the-distinction-between-traditional-brokers-and-apache-kafka" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2022-01-20:4680</id>
    <updated>2022-01-20T20:00:00Z</updated>
    <content type="html">&lt;p&gt;Hi, Spring fans! In this installment &lt;a href="https://twitter.com/starbuxman"&gt;Josh Long (@starbuxman)&lt;/a&gt; talks to returning guest RedHat&amp;rsquo;s &lt;a href="https://twitter.com/KateStanley91"&gt;Kate Stanley (@KateStanley91)&lt;/a&gt; on the distinction between traditional brokers and Apache Kafka.&lt;/p&gt;
&lt;iframe title="RedHat¡¯s Kate Stanley on the distinction between traditional brokers and Apache Kafka" allowtransparency="true" height="150" width="100%" style="border: none; min-width: min(100%, 430px);" scrolling="no" data-name="pb-iframe-player" src="https://www.podbean.com/player-v2/?i=6knsk-1184ba0-pb&amp;from=pb6admin&amp;share=1&amp;download=1&amp;rtl=0&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;btn-skin=7"&gt;&lt;/iframe&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.7.0-M1 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/20/spring-boot-2-7-0-m1-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Scott Frederick</name>
    </author>
    <id>tag:spring.io,2022-01-20:4679</id>
    <updated>2022-01-20T19:57:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;2.7.0-M1&lt;/code&gt; has been released and is now available from &lt;a href="https://repo.spring.io/milestone"&gt;https://repo.spring.io/milestone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.7.0-M1"&gt;111 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Notable new features include:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring GraphQL starter&lt;/li&gt;
  &lt;li&gt;Operating system and Java vendor information in actuator info endpoint&lt;/li&gt;
  &lt;li&gt;Support for RabbitStreamTemplate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please see the &lt;a href="https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.7.0-M1-Release-Notes"&gt;release notes&lt;/a&gt; for more details and upgrade instructions.&lt;/p&gt;
&lt;p&gt;Thanks to all those who have contributed with issue reports and pull requests. &lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/2.7.0-M1/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.6.3 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/20/spring-boot-2-6-3-is-now-available" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2022-01-20:4678</id>
    <updated>2022-01-20T15:25:35Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;2.6.3&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.6.3"&gt;39 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/2.6.3/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Data JDBC - How Can I Do a Partial Update of an Aggregate Root?</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/20/spring-data-jdbc-how-can-i-do-a-partial-update-of-an-aggregate-root" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Jens Schauder</name>
    </author>
    <id>tag:spring.io,2021-09-09:4540</id>
    <updated>2022-01-20T13:18:00Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;This is the fourth article of a series about how to tackle various challenges you might encounter when using Spring Data JDBC.
The series consists of:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="olist arabic"&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2021/09/09/spring-data-jdbc-how-to-use-custom-id-generation"&gt;Spring Data JDBC - How to Use Custom ID Generation.&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2021/09/22/spring-data-jdbc-how-do-i-make-bidirectional-relationships"&gt;Spring Data JDBC - How Do I Make Bidirectional Relationships?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://spring.io/blog/2021/10/18/spring-data-jdbc-how-do-i-implement-caching"&gt;Spring Data JDBC - How Do I Implement Caching?&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring Data JDBC - How Can I Do a Partial Update of an Aggregate Root? (this article)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If you are new to Spring Data JDBC, you should start by reading &lt;a href="https://spring.io/blog/2018/09/17/introducing-spring-data-jdbc"&gt;introduction&lt;/a&gt; and &lt;a href="https://spring.io/blog/2018/09/24/spring-data-jdbc-references-and-aggregates"&gt;this article, which explains the relevance of aggregates in the context of Spring Data JDBC&lt;/a&gt;. Trust me. It is important.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data JDBC is built around the idea of aggregates and repositories.
Repositories are collection-like objects that find, load, save, and delete aggregates.
Aggregates are clusters of objects that have a tight relationship and are internally consistent whenever program control is outside their methods.
As such, aggregates also get loaded and persisted together in one atomic operation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;However, Spring Data JDBC doesn&amp;#8217;t keep track of how your aggregates change.
Therefore, Spring Data JDBCs algorithm for persisting an aggregate minimizes the assumptions made about the database state.
This is costly if your aggregate contains a collection of entities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For an example to show what happens, we once again turn to Minions.
This Minion has a Set of Toys.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;class Minion {

	@Id Long id;
	String name;
	Color color = Color.YELLOW;
	Set&amp;lt;Toy&amp;gt; toys = new HashSet&amp;lt;&amp;gt;();
	@Version int version;

	Minion(String name) {
		this.name = name;
	}

	@PersistenceConstructor
	private Minion(Long id, String name, Collection&amp;lt;Toy&amp;gt; toys, int version) {

		this.id = id;
		this.name = name;
		this.toys.addAll(toys);
		this.version = version;
	}

	Minion addToy(Toy toy) {

		toys.add(toy);
		return this;
	}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The schema for these classes looks like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="sql"&gt;CREATE TABLE MINION
(
    ID             IDENTITY PRIMARY KEY,
    NAME           VARCHAR(255),
    COLOR          VARCHAR(10),
    VERSION      INT
);

CREATE TABLE TOY
(
    MINION  BIGINT NOT NULL,
    NAME    VARCHAR(255)
);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;And the repository interface is trivial for now:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;interface MinionRepository extends CrudRepository&amp;lt;Minion, Long&amp;gt; {}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;If we save a Minion that already exists in the database, the following happens:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="olist arabic"&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;
&lt;p&gt;All Toys in the database of that minion get deleted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The minion itself gets updated.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All the Toys that are currently part of that Minion get inserted into the database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This is wasteful when there are many toys and none of them changed, was deleted, or added.
However, Spring Data JDBC does not have any information about this, and it should not, to keep it simple.
Also, you might know more in your code than Spring Data or any other tool or library knows, and you might be able to take advantage of that knowledge.
The next sections describe various ways of doing that.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="use-a-reduced-view-of-the-aggregate-root"&gt;&lt;a class="anchor" href="#use-a-reduced-view-of-the-aggregate-root"&gt;&lt;/a&gt;Use a Reduced View of the Aggregate Root&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Toys are an indispensable part of any proper minion but maybe there are domains that do not care about toys.
If so, there is nothing wrong about having a &lt;code&gt;PlainMinion&lt;/code&gt; mapped to the same table:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@Table("MINION")
class PlainMinion {
	@Id Long id;
	String name;
	@Version int version;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Since it does not know about toys, it leaves them alone, as you can verify with a test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@SpringBootTest
class SelectiveUpdateApplicationTests {

	@Autowired MinionRepository minions;
	@Autowired PlainMinionRepository plainMinions;


	@Test
	void renameWithReducedView() {

		Minion bob = new Minion("Bob")
				.addToy(new Toy("Tiger Duck"))
				.addToy(new Toy("Security blanket"));
		minions.save(bob);

		PlainMinion plainBob = plainMinions.findById(bob.id).orElseThrow();
		plainBob.name = "Bob II.";
		plainMinions.save(plainBob);

		Minion bob2 = minions.findById(bob.id).orElseThrow();

		assertThat(bob2.toys).containsExactly(bob.toys.toArray(new Toy[]{}));
	}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Just make sure you have a foreign key between the toys and the minion so that you cannot accidentally delete the minion without also deleting its toys.
Also, this works only for aggregate roots. Entities inside an aggregate get deleted and recreated, so any column not present in a reduced view of such an entity gets reset to its default value.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="use-direct-database-updates"&gt;&lt;a class="anchor" href="#use-direct-database-updates"&gt;&lt;/a&gt;Use Direct Database Updates&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Alternatively, you can just write your update in a new repository method:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;interface MinionRepository extends CrudRepository&amp;lt;Minion, Long&amp;gt; {

	@Modifying
	@Query("UPDATE MINION SET COLOR ='PURPLE', VERSION = VERSION +1 WHERE ID = :id")
	void turnPurple(Long id);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;You need to be aware that it bypasses any logic in Spring Data JDBC.
You must make sure this does not cause problems for your application.
An example of such logic is the optimistic locking.
The statement above takes care of optimistic locking, so other processes that do something else with the Minion do not accidentally undo the color change.
Similarly, if your entities have auditing columns, you need to make sure they get updated accordingly.
If you use &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/#jdbc.events"&gt;lifecycle events&lt;/a&gt; or &lt;a href="https://docs.spring.io/spring-data/jdbc/docs/current/reference/html/#jdbc.entity-callbacks"&gt;entity callback&lt;/a&gt;, you need to consider if and how to emulate their action.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="use-custom-methods"&gt;&lt;a class="anchor" href="#use-custom-methods"&gt;&lt;/a&gt;Use Custom Methods&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;One alternative often overlooked by many Spring Data users is the option to implement a custom method where you may code whatever you want or need for your purpose.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;For this, you let your repository extend an interface to contain the method you want to implement:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;interface MinionRepository extends CrudRepository&amp;lt;Minion, Long&amp;gt;, PartyHatRepository {}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;interface PartyHatRepository {

	void addPartyHat(Minion minion);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Then provide an implementation for it with the same name but an added &lt;code&gt;Impl&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;class PartyHatRepositoryImpl implements PartyHatRepository {


	private final NamedParameterJdbcOperations template;

	public PartyHatRepositoryImpl(NamedParameterJdbcOperations template) {
		this.template = template;
	}

	@Override
	public void addPartyHat(Minion minion) {

		Map&amp;lt;String, Object&amp;gt; insertParams = new HashMap&amp;lt;&amp;gt;();
		insertParams.put("id", minion.id);
		insertParams.put("name", "Party Hat");
		template.update("INSERT INTO TOY (MINION, NAME) VALUES (:id, :name)", insertParams);

		Map&amp;lt;String, Object&amp;gt; updateParams = new HashMap&amp;lt;&amp;gt;();
		updateParams.put("id", minion.id);
		updateParams.put("version", minion.version);
		final int updateCount = template.update("UPDATE MINION SET VERSION = :version + 1 WHERE ID = :id AND VERSION = :version", updateParams);
		if (updateCount != 1) {
			throw new OptimisticLockingFailureException("Minion was changed before a Party Hat was given");
		}
	}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;In our example, we execute multiple SQL statements to add a toy and also to ensure that optimistic locking is used:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="listingblock"&gt;
&lt;div class="content"&gt;
&lt;pre class="prettyprint highlight"&gt;&lt;code data-lang="java"&gt;@Test
void grantPartyHat() {

  Minion bob = new Minion("Bob")
      .addToy(new Toy("Tiger Duck"))
      .addToy(new Toy("Security blanket"));
  minions.save(bob);

  minions.addPartyHat(bob);

  Minion bob2 = minions.findById(bob.id).orElseThrow();

  assertThat(bob2.toys).extracting("name").containsExactlyInAnyOrder("Tiger Duck", "Security blanket", "Party Hat");
  assertThat(bob2.name).isEqualTo("Bob");
  assertThat(bob2.color).isEqualTo(Color.YELLOW);
  assertThat(bob2.version).isEqualTo(bob.version+1);

  assertThatExceptionOfType(OptimisticLockingFailureException.class).isThrownBy(() -&amp;gt; minions.addPartyHat(bob));
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="conclusion"&gt;&lt;a class="anchor" href="#conclusion"&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Spring Data JDBC is here to make your life easier in the standard cases.
At the same time, it tries to not get in your way if you want something to behave differently.
There are many levels on which you may choose to implement the desired behavior.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;The complete example code is available in the &lt;a href="https://github.com/spring-projects/spring-data-examples/tree/main/jdbc/howto/selectiveupdate"&gt;Spring Data Example repository&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;There will be more articles like this. Let me know if you would like me to cover specific topics.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Boot 2.5.9 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/20/spring-boot-2-5-9-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>St?phane Nicoll</name>
    </author>
    <id>tag:spring.io,2022-01-20:4677</id>
    <updated>2022-01-20T11:58:29Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I&amp;rsquo;m happy to announce that Spring Boot &lt;code&gt;2.5.9&lt;/code&gt; has been released and is now available from Maven Central.&lt;/p&gt;
&lt;p&gt;This release includes &lt;a href="https://github.com/spring-projects/spring-boot/releases/tag/v2.5.9"&gt;32 bug fixes, documentation improvements, and dependency upgrades&lt;/a&gt;. Thanks to all those who have contributed with issue reports and pull requests.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, check out the &lt;a href="https://github.com/spring-projects/spring-boot/labels/status%3A%20ideal-for-contribution"&gt;&amp;ldquo;ideal for contribution&amp;rdquo; tag&lt;/a&gt; in the issue repository. If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-boot"&gt;&lt;code&gt;spring-boot&lt;/code&gt; tag&lt;/a&gt; or chat with the community on &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-boot/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-boot/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-boot/docs/2.5.9/reference/html"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-boot"&gt;Stack Overflow&lt;/a&gt; | &lt;a href="https://gitter.im/spring-projects/spring-boot"&gt;Gitter&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring Batch 5.0 M1 released</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/19/spring-batch-5-0-m1-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Mahmoud Ben Hassine</name>
    </author>
    <id>tag:spring.io,2022-01-19:4676</id>
    <updated>2022-01-19T23:43:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who contributed, I am pleased to announce that the first milestone release of Spring Batch 5.0 is available now from &lt;a href="https://repo.spring.io/milestone"&gt;https://repo.spring.io/milestone&lt;/a&gt;. This first milestone includes a number of major changes such as requiring Java 17+, migrating to Jakarta EE 9 APIs as well as upgrading our dependencies across the portfolio to major versions such as Spring Framework 6.0. For a complete list of changes, please check the &lt;a href="https://github.com/spring-projects/spring-batch/releases/tag/5.0.0-M1"&gt;change log&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We also took the opportunity of this major version to remove deprecated APIs and fix some issues that require non backward compatible changes. The &lt;a href="https://github.com/spring-projects/spring-batch/wiki/Spring-Batch-5.0-Migration-Guide"&gt;migration guide&lt;/a&gt; contains more details about these changes and provides the upgrade instructions.&lt;/p&gt;
&lt;p&gt;As we continue our work on Spring Batch 5, we look forward to your feedback on this first milestone!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-batch"&gt;Spring Batch Home&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-batch"&gt;Source on GitHub&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
  <entry>
    <title>Spring for GraphQL 1.0.0-M5 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2022/01/19/spring-for-graphql-1-0-0-m5-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Brian Clozel</name>
    </author>
    <id>tag:spring.io,2022-01-18:4673</id>
    <updated>2022-01-19T15:48:00Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team and everyone who has contributed, I am pleased to announce that Spring for GraphQL &lt;code&gt;1.0.0-M5&lt;/code&gt; is now available from &lt;a href="https://repo.spring.io/milestone"&gt;https://repo.spring.io/milestone&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The M5 release is a quick follow-on after the feature-rich &lt;a href="https://spring.io/blog/2021/12/14/spring-graphql-1-0-0-m4-released"&gt;M4 release&lt;/a&gt; from December. The main goal for M5 was to move the Boot starter out of the Spring GraphQL repository and into Spring Boot proper, ahead of the first Spring Boot 2.7 milestone this Thursday. In addition to that, as always, there was plenty of feedback leading to a number of refinements and fixes.&lt;/p&gt;&lt;h3&gt;&lt;a href="#spring-boot-graphql-starter" class="anchor" name="spring-boot-graphql-starter"&gt;&lt;/a&gt;Spring Boot GraphQL Starter&lt;/h3&gt;
&lt;p&gt;The GraphQL starter has moved out of the Spring for GraphQL project repository and into the Spring Boot repository, from where it will be made available in &lt;a href="https://github.com/spring-projects/spring-boot/milestone/235"&gt;the upcoming 2.7.0-M1 release&lt;/a&gt;. Here is the &lt;a href="https://docs.spring.io/spring-boot/docs/2.7.x-SNAPSHOT/reference/html/web.html#web.graphql"&gt;GraphQL section&lt;/a&gt; in the Spring Boot docs.&lt;/p&gt;
&lt;p&gt;To make the experience easier, the starter is now also available on start.spring.io - &lt;a href="https://start.spring.io/#!type=gradle-project&amp;language=java&amp;platformVersion=2.7.0-SNAPSHOT&amp;packaging=jar&amp;jvmVersion=11&amp;groupId=com.example&amp;artifactId=graphql-sample&amp;name=graphql-sample&amp;description=Demo%20project%20for%20Spring%20for%20GraphQL&amp;packageName=com.example.graphql.sample&amp;dependencies=graphql"&gt;try out this link to create your own GraphQL application&lt;/a&gt;!&lt;/p&gt;&lt;h3&gt;&lt;a href="#web-interception" class="anchor" name="web-interception"&gt;&lt;/a&gt;Web Interception&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;WebInterceptor&lt;/code&gt; instances intercept GraphQL over HTTP or over WebSocket requests.&lt;br/&gt;It allows getting information about the HTTP request or WebSocket handshake and to customize the &lt;code&gt;ExecutionInput&lt;/code&gt; and &lt;code&gt;ExecutionResult&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is useful for common use cases with GraphQL such as:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;fetching data from the HTTP request and adding it to the &lt;code&gt;GraphQLContext&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;getting information from the &lt;code&gt;GraphQLContext&lt;/code&gt; after the request and exposing an HTTP response header.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this release, the &lt;code&gt;WebInput&lt;/code&gt; and &lt;code&gt;WebOutput&lt;/code&gt; types, which have been available from the beginning, have been reviewed and refactored a bit to make them easier to use. The specific goal was to ensure easy access to the &lt;code&gt;GraphQLContext&lt;/code&gt; for both inbound and for outbound interception. So you can now do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class="prettyprint java"&gt;public class CustomHeaderWebInterceptor implements WebInterceptor {&#xD;
&#xD;
	@Override&#xD;
	public Mono&amp;lt;WebOutput&amp;gt; intercept(WebInput input, WebInterceptorChain chain) {&#xD;
		return chain.next(input).doOnNext(output -&amp;gt; {&#xD;
			GraphQLContext context = output.getExecutionInput().getGraphQLContext();&#xD;
			String value = context.get(&amp;quot;...&amp;quot;);&#xD;
			webOutput.getResponseHeaders().set(&amp;quot;Custom-Header&amp;quot;, value);&#xD;
		});&#xD;
	}&#xD;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a href="#executionid" class="anchor" name="executionid"&gt;&lt;/a&gt;ExecutionId&lt;/h3&gt;
&lt;p&gt;On the topic of web interception, it is now also easier to set the &lt;code&gt;ExecutionId&lt;/code&gt; for the GraphQL request&lt;br/&gt;from a &lt;code&gt;WebInterceptor&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;In GraphQL Java, it is possible to tag each request with a unique &lt;code&gt;ExecutionId&lt;/code&gt;, which by default is a UUID.&lt;br/&gt;In Spring for GraphQL, we&amp;rsquo;re hooking in a web transport layer id, for example&lt;br/&gt;&lt;a href="https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-logging-id"&gt;WebFlux requestId&lt;/a&gt;&lt;br/&gt;which could make it easier to correlate log messages with the Web transport.&lt;/p&gt;
&lt;p&gt;However, we&amp;rsquo;ve also made changes to make it easier to customize the &lt;code&gt;ExecutionId&lt;/code&gt; through a &lt;code&gt;WebInterceptor&lt;/code&gt;&lt;br/&gt;and it&amp;rsquo;s now also possible to configure your own &lt;code&gt;ExecutionIdProvider&lt;/code&gt; in &lt;code&gt;graphq.GraphQL&lt;/code&gt; that would override&lt;br/&gt;the default id used in Spring GraphQL.&lt;/p&gt;&lt;h3&gt;&lt;a href="#querydsl-and-query-by-example-auto-registration" class="anchor" name="querydsl-and-query-by-example-auto-registration"&gt;&lt;/a&gt;Querydsl and Query By Example Auto-Registration&lt;/h3&gt;
&lt;p&gt;This release improves how auto-registration is performed for Querydsl and Query by Example for &lt;code&gt;@GraphQlRepository&lt;/code&gt; annotated, Spring Data repositories. The root of the challenge is that auto-registration should apply only if there isn&amp;rsquo;t a &lt;code&gt;DataFetcher&lt;/code&gt; registered for that field and there are multiple ways to register those, as well as to decorate them, as some 3rd libraries do, and that can interfere with the auto-registration.&lt;/p&gt;
&lt;p&gt;In this milestone, we have switched from using a Schema &lt;code&gt;TypeVisitor&lt;/code&gt; to a &lt;code&gt;WiringFactory&lt;/code&gt; for auto-registration. This should provide a more stable mechanism that works better in a range of scenarios and alongside other libraries.&lt;/p&gt;
&lt;p&gt;If you want to learn more about Querydsl and Query by Example support, please check the &lt;a href="https://docs.spring.io/spring-graphql/docs/current-SNAPSHOT/reference/html/#data"&gt;documentation&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;a href="#graphiql-websocket-support" class="anchor" name="graphiql-websocket-support"&gt;&lt;/a&gt;GraphiQL WebSocket support&lt;/h3&gt;
&lt;p&gt;Spring for GraphQL ships with &lt;a href="https://github.com/graphql/graphiql#graphiql"&gt;a simple GraphiQL integration&lt;/a&gt;; this tool is not only useful at development time to craft queries and test an API we&amp;rsquo;re building, but also a nice way to explore an API for client developers.&lt;/p&gt;
&lt;p&gt;While we think that for more specific needs, applications should build their own page, we&amp;rsquo;ve improved our default experience to include WebSocket support. You can now test subscriptions over WebSocket in the GraphiQL UI!&lt;/p&gt;&lt;h3&gt;&lt;a href="#more" class="anchor" name="more"&gt;&lt;/a&gt;More&lt;/h3&gt;
&lt;p&gt;More &lt;a href="https://github.com/spring-projects/spring-graphql/milestone/6?closed=1"&gt;improvements and fixes made their way into their release&lt;/a&gt; and they&amp;rsquo;re available right now in the new Spring for GraphQL 1.0.0-M5 release from the Spring Milestone repository.&lt;/p&gt;&lt;h3&gt;&lt;a href="#how-can-you-help" class="anchor" name="how-can-you-help"&gt;&lt;/a&gt;How can you help?&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re interested in helping out, you can &lt;a href="https://docs.spring.io/spring-graphql/docs/1.0.0-M4/reference/html/#boot-graphql"&gt;get started with Spring GraphQL&lt;/a&gt; and &lt;a href="https://github.com/spring-projects/spring-graphql/issues"&gt;raise issues on our GitHub project&lt;/a&gt;.&lt;br/&gt;If you have general questions, please ask on &lt;a href="https://stackoverflow.com"&gt;stackoverflow.com&lt;/a&gt; using the &lt;a href="https://stackoverflow.com/tags/spring-graphql"&gt;&lt;code&gt;spring-graphql&lt;/code&gt; tag&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spring.io/projects/spring-graphql/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-graphql"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-graphql/issues"&gt;Issues&lt;/a&gt; | &lt;a href="https://docs.spring.io/spring-graphql/docs/1.0.0-M5/reference/html/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://stackoverflow.com/questions/tagged/spring-graphql"&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
&lt;!-- rendered by Sagan Renderer Service --&gt;</content>
  </entry>
</feed>
